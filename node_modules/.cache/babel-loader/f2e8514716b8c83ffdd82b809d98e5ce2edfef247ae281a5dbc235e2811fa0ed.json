{"ast":null,"code":"var _jsxFileName = \"/home/bahtija/Desktop/WD Final/final-frontend-main2/src/components/containers/InstructorContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInstructorThunk, fetchAllCoursesThunk, editCourseThunk } from \"../../store/thunks\";\nimport { InstructorView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InstructorContainer extends Component {\n  componentDidMount() {\n    //getting instructor ID from url\n    this.props.fetchInstructor(this.props.match.params.id);\n    this.props.fetchCourses();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(InstructorView, {\n      instructor: this.props.instructor,\n      editCourse: this.props.editCourse,\n      allCourses: this.props.allCourses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// map state to props\nconst mapState = state => {\n  return {\n    instructor: state.instructor,\n    allCourses: state.allCourses\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = dispatch => {\n  return {\n    fetchInstructor: id => dispatch(fetchInstructorThunk(id)),\n    editCourse: course => dispatch(editCourseThunk(course)),\n    fetchCourses: () => dispatch(fetchAllCoursesThunk())\n  };\n};\nexport default connect(mapState, mapDispatch)(InstructorContainer);","map":{"version":3,"names":["React","Component","connect","fetchInstructorThunk","fetchAllCoursesThunk","editCourseThunk","InstructorView","InstructorContainer","componentDidMount","props","fetchInstructor","match","params","id","fetchCourses","render","instructor","editCourse","allCourses","mapState","state","mapDispatch","dispatch","course"],"sources":["/home/bahtija/Desktop/WD Final/final-frontend-main2/src/components/containers/InstructorContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { \n  fetchInstructorThunk,\n  fetchAllCoursesThunk,\n  editCourseThunk \n} from \"../../store/thunks\";\n\nimport { InstructorView } from \"../views\";\n\nclass InstructorContainer extends Component {\n  componentDidMount() {\n    //getting instructor ID from url\n    this.props.fetchInstructor(this.props.match.params.id);\n    this.props.fetchCourses();\n  }\n\n  render() {\n    return (\n      <InstructorView \n        instructor={this.props.instructor}\n        editCourse={this.props.editCourse}\n        allCourses={this.props.allCourses}\n      />\n    );\n  }\n}\n\n// map state to props\nconst mapState = (state) => {\n  return {\n    instructor: state.instructor,\n    allCourses: state.allCourses,\n\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchInstructor: (id) => dispatch(fetchInstructorThunk(id)),\n    editCourse: (course) => dispatch(editCourseThunk(course)),\n    fetchCourses: () => dispatch(fetchAllCoursesThunk()),\n\n  };\n};\n\nexport default connect(mapState, mapDispatch)(InstructorContainer);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,oBAAoB,EACpBC,oBAAoB,EACpBC,eAAe,QACV,oBAAoB;AAE3B,SAASC,cAAc,QAAQ,UAAU;AAAC;AAE1C,MAAMC,mBAAmB,SAASN,SAAS,CAAC;EAC1CO,iBAAiB,GAAG;IAClB;IACA,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;IACtD,IAAI,CAACJ,KAAK,CAACK,YAAY,EAAE;EAC3B;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,cAAc;MACb,UAAU,EAAE,IAAI,CAACN,KAAK,CAACO,UAAW;MAClC,UAAU,EAAE,IAAI,CAACP,KAAK,CAACQ,UAAW;MAClC,UAAU,EAAE,IAAI,CAACR,KAAK,CAACS;IAAW;MAAA;MAAA;MAAA;IAAA,QAClC;EAEN;AACF;;AAEA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLJ,UAAU,EAAEI,KAAK,CAACJ,UAAU;IAC5BE,UAAU,EAAEE,KAAK,CAACF;EAEpB,CAAC;AACH,CAAC;;AAED;AACA,MAAMG,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLZ,eAAe,EAAGG,EAAE,IAAKS,QAAQ,CAACnB,oBAAoB,CAACU,EAAE,CAAC,CAAC;IAC3DI,UAAU,EAAGM,MAAM,IAAKD,QAAQ,CAACjB,eAAe,CAACkB,MAAM,CAAC,CAAC;IACzDT,YAAY,EAAE,MAAMQ,QAAQ,CAAClB,oBAAoB,EAAE;EAErD,CAAC;AACH,CAAC;AAED,eAAeF,OAAO,CAACiB,QAAQ,EAAEE,WAAW,CAAC,CAACd,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}