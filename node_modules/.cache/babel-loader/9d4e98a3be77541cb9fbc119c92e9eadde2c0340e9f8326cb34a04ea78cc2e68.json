{"ast":null,"code":"var _jsxFileName = \"/home/bahtija/Desktop/WD Final/final-frontend-main2/src/components/containers/AllInstructorsContainer.js\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllInstructorsThunk } from \"../../store/thunks\";\nimport { AllInstructorsView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AllInstructorsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllInstructors();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(AllInstructorsView, {\n      allInstructors: this.props.allInstructors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allInstructors: state.allInstructors\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllInstructors: () => dispatch(fetchAllInstructorsThunk())\n  };\n};\n\n// Type check props;\nAllInstructorsContainer.propTypes = {\n  allInstructors: PropTypes.array.isRequired,\n  fetchAllInstructors: PropTypes.func.isRequired\n};\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllInstructorsContainer);","map":{"version":3,"names":["Component","PropTypes","connect","fetchAllInstructorsThunk","AllInstructorsView","AllInstructorsContainer","componentDidMount","console","log","props","fetchAllInstructors","render","allInstructors","mapState","state","mapDispatch","dispatch","propTypes","array","isRequired","func"],"sources":["/home/bahtija/Desktop/WD Final/final-frontend-main2/src/components/containers/AllInstructorsContainer.js"],"sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllInstructorsThunk } from \"../../store/thunks\";\nimport { AllInstructorsView } from \"../views\";\n\nclass AllInstructorsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllInstructors();\n  }\n\n  render() {\n    return (\n      <AllInstructorsView\n        allInstructors={this.props.allInstructors}\n      />\n    );\n  }\n}\n\n// Map state to props;\nconst mapState = (state) => {\n  return {\n    allInstructors: state.allInstructors,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllInstructors: () => dispatch(fetchAllInstructorsThunk()),\n  };\n};\n\n// Type check props;\nAllInstructorsContainer.propTypes = {\n  allInstructors: PropTypes.array.isRequired,\n  fetchAllInstructors: PropTypes.func.isRequired,\n};\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllInstructorsContainer);"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,wBAAwB,QAAQ,oBAAoB;AAC7D,SAASC,kBAAkB,QAAQ,UAAU;AAAC;AAE9C,MAAMC,uBAAuB,SAASL,SAAS,CAAC;EAC9CM,iBAAiB,GAAG;IAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;IACvB,IAAI,CAACA,KAAK,CAACC,mBAAmB,EAAE;EAClC;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,kBAAkB;MACjB,cAAc,EAAE,IAAI,CAACF,KAAK,CAACG;IAAe;MAAA;MAAA;MAAA;IAAA,QAC1C;EAEN;AACF;;AAEA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLF,cAAc,EAAEE,KAAK,CAACF;EACxB,CAAC;AACH,CAAC;;AAED;AACA,MAAMG,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLN,mBAAmB,EAAE,MAAMM,QAAQ,CAACb,wBAAwB,EAAE;EAChE,CAAC;AACH,CAAC;;AAED;AACAE,uBAAuB,CAACY,SAAS,GAAG;EAClCL,cAAc,EAAEX,SAAS,CAACiB,KAAK,CAACC,UAAU;EAC1CT,mBAAmB,EAAET,SAAS,CAACmB,IAAI,CAACD;AACtC,CAAC;;AAED;AACA,eAAejB,OAAO,CAACW,QAAQ,EAAEE,WAAW,CAAC,CAACV,uBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}